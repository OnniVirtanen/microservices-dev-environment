version: '3.9'

services:
  order-service:
    image: 'order-service:latest'
    build:
      context: .
    container_name: order-service
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:mongo@mongodb:27017/order?authSource=admin
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-1:9092,kafka-2:9092
    ports:
      - "8084:8080"
    networks:
      - app-network
    depends_on:
      - mongodb
      - kafka-1
      - kafka-2
  shipping-service:
    image: 'shipping-service:latest'
    build:
      context: .
    container_name: shipping-service
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:mongo@mongodb:27017/shipping?authSource=admin
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-1:9092,kafka-2:9092
    ports:
      - "8081:8080"
    networks:
      - app-network
    depends_on:
      - mongodb
      - kafka-1
      - kafka-2
  payment-service:
    image: 'payment-service:latest'
    build:
      context: .
    container_name: payment-service
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-1:9092,kafka-2:9092
    ports:
      - "8082:8080"
    networks:
      - app-network
    depends_on:
      - kafka-1
      - kafka-2
  inventory-service:
    image: 'inventory-service:latest'
    build:
      context: .
    container_name: inventory-service
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=create-drop
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka-1:9092,kafka-2:9092
    ports:
      - "8083:8080"
    networks:
      - app-network
    depends_on:
      - postgres
      - kafka-1
      - kafka-2
  postgres:
    image: postgres:14-alpine
    ports:
      - 8010:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    networks:
      - app-network
  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    ports:
      - 27017:27017
    volumes:
      - ~/apps/mongodb:/var/lib/mongodb/data
    environment:
      - MONGO_INITDB_ROOT_USERNAME=mongo
      - MONGO_INITDB_ROOT_PASSWORD=mongo
    networks:
      - app-network
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - app-network
  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper-2
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:2181"
    networks:
      - app-network
  kafka-1:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-1
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network
  kafka-2:
    image: confluentinc/cp-kafka:latest
    container_name: kafka-2
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "39092:39092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - app-network


networks:
  app-network:
    external: true